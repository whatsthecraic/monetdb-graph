# load the graph and the query columns
(f0, t0, w0) := graph.load("/tmp/graph10.txt");
(qfrom, qto) := graph.loadq("/tmp/query2.txt");
(V, E, W) := graph.make(f0, t0, w0);

# scatter
(qf0, qt0) := graph.scatter(qfrom, qto, 0, 4);
(qf1, qt1) := graph.scatter(qfrom, qto, 1, 4);
(qf2, qt2) := graph.scatter(qfrom, qto, 2, 4);
(qf3, qt3) := graph.scatter(qfrom, qto, 3, 4);

# execute
(w0, poid0, ppath0) := graph.spfw(V, E, W, qf0, qt0);
(w1, poid1, ppath1) := graph.spfw(V, E, W, qf1, qt1);
(w2, poid2, ppath2) := graph.spfw(V, E, W, qf2, qt2);
(w3, poid3, ppath3) := graph.spfw(V, E, W, qf3, qt3);

# gather
w := mat.pack(w0, w1, w2, w3);
poid := mat.pack(poid0, poid1, poid2, poid3);
ppath := mat.pack(ppath0, ppath1, ppath2, ppath3);

# store the result for validation
graph.save("/tmp/validate_par4.txt", qfrom, qto, w, poid, ppath);
io.print("Done");